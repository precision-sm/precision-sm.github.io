(function(a){if(typeof define==="function"&&define.amd){define(["threejs"],a)}else{if(typeof exports==="object"&&typeof module!=="undefined"){a(require("./three.min.js"),exports)}else{if(typeof THREE=="undefined"){throw new Error("THREE is not defined","ThreeCSG.js")}ThreeBSP=a(THREE)}}}(function(e,g){if(!g){g={}}var b=0.00001,d=0,c=1,f=2,a=3;g.Geometry=function(v,l,h,m){if(v instanceof e.Geometry){this.matrix=null}else{if(v instanceof e.Mesh){v.updateMatrix();l=this.matrix=v.matrix.clone();v=v.geometry}else{if(v instanceof g.Node){this.tree=v;this.matrix=null;return this}else{if(v instanceof e.BufferGeometry){var j=v.getAttribute("position").array,o=v.getAttribute("normal").array,x=[],w,u,t,r;for(var p=0;p<j.length;p+=9){w=new g.Polygon;u=new g.Vertex(j[p],j[p+1],j[p+2],o[p],o[p+1],o[p+2]);if(l){u.applyMatrix4(l)}t=new g.Vertex(j[p+3],j[p+4],j[p+5],o[p+3],o[p+4],o[p+5]);if(l){t.applyMatrix4(l)}r=new g.Vertex(j[p+6],j[p+7],j[p+8],o[p+6],o[p+7],o[p+8]);if(l){r.applyMatrix4(l)}if(m){w.vertices.push(u,r,t)}else{w.vertices.push(u,t,r)}w.calculateProperties();x.push(w)}this.tree=new g.Node(x,h);if(h!==undefined){this.maxid=this.tree.maxnodeid}return this}else{if(v.polygons&&(v.polygons[0] instanceof g.Polygon)){var x=v.polygons;for(var p=0;p<x.length;++p){var w=x[p];if(l){for(var k=0;k<w.vertices.length;++k){w.vertices[k].applyMatrix4(l)}}w.calculateProperties()}this.tree=new g.Node(x,h);if(h!==undefined){this.maxid=this.tree.maxnodeid}return this}else{throw"ThreeBSP: Given geometry is unsupported"}}}}}var x=[],y=v.faces.length,s,w,q;for(var p=0;p<y;++p){s=v.faces[p];w=new g.Polygon;if(s instanceof e.Face3){q=v.vertices[s.a];q=new g.Vertex(q.x,q.y,q.z,s.vertexNormals[0].x,s.vertexNormals[0].y,s.vertexNormals[0].z);if(l){q.applyMatrix4(l)}w.vertices.push(q);q=v.vertices[s.b];q=new g.Vertex(q.x,q.y,q.z,s.vertexNormals[1].x,s.vertexNormals[1].y,s.vertexNormals[1].z);if(l){q.applyMatrix4(l)}w.vertices.push(q);q=v.vertices[s.c];q=new g.Vertex(q.x,q.y,q.z,s.vertexNormals[2].x,s.vertexNormals[2].y,s.vertexNormals[2].z);if(l){q.applyMatrix4(l)}w.vertices.push(q)}else{if(typeof e.Face4){q=v.vertices[s.a];q=new g.Vertex(q.x,q.y,q.z,s.vertexNormals[0].x,s.vertexNormals[0].y,s.vertexNormals[0].z);if(l){q.applyMatrix4(l)}w.vertices.push(q);q=v.vertices[s.b];q=new g.Vertex(q.x,q.y,q.z,s.vertexNormals[1].x,s.vertexNormals[1].y,s.vertexNormals[1].z);if(l){q.applyMatrix4(l)}w.vertices.push(q);q=v.vertices[s.c];q=new g.Vertex(q.x,q.y,q.z,s.vertexNormals[2].x,s.vertexNormals[2].y,s.vertexNormals[2].z);if(l){q.applyMatrix4(l)}w.vertices.push(q);q=v.vertices[s.d];q=new g.Vertex(q.x,q.y,q.z,s.vertexNormals[3].x,s.vertexNormals[3].y,s.vertexNormals[3].z);if(l){q.applyMatrix4(l)}w.vertices.push(q)}else{throw"Invalid face type at index "+p}}w.calculateProperties();x.push(w)}this.tree=new g.Node(x,h);if(h!==undefined){this.maxid=this.tree.maxnodeid}};g.Geometry.prototype.subtract=function(i){var j=this.tree.clone(),h=i.tree.clone();j.invert();j.clipTo(h);h.clipTo(j);h.invert();h.clipTo(j);h.invert();j.build(h.allPolygons());j.invert();j=new g.Geometry(j);j.matrix=this.matrix;return j};g.Geometry.prototype.union=function(i){var j=this.tree.clone(),h=i.tree.clone();j.clipTo(h);h.clipTo(j);h.invert();h.clipTo(j);h.invert();j.build(h.allPolygons());j=new g.Geometry(j);j.matrix=this.matrix;return j};g.Geometry.prototype.intersect=function(i){var j=this.tree.clone(),h=i.tree.clone();j.invert();h.clipTo(j);h.invert();j.clipTo(h);h.clipTo(j);j.build(h.allPolygons());j.invert();j=new g.Geometry(j);j.matrix=this.matrix;return j};g.Geometry.prototype.tryToCompress=function(s){if(this.maxid===undefined){return}var o=[],m,j,q=0,i,r=s.length,h,u,t,l,k;for(i=0;i<r;++i){h=s[i];if(h.id===undefined){continue}if(o[h.id]===undefined){o[h.id]=[]}o[h.id].push(h)}for(i=0;i<o.length;++i){m=o[i];if(m===undefined){continue}r=m.length;j=(r>1);while(j){j=false;for(l=0;l<r-1;++l){u=m[l];if(!u||!u.parent){continue}for(k=l+1;k<r;++k){t=m[k];if(t&&(u.parent===t.parent)&&(u.nsign===t.nsign)){if(u.nsign!==u.parent.nsign){u.parent.flip()}q++;m[l]=u.parent;m[k]=null;if(u.parent.vertices.length<3){console.log("something wrong with parent")}j=true;break}}}}}if(q>0){s.splice(0,s.length);for(i=0;i<o.length;++i){m=o[i];if(m!==undefined){for(l=0,r=m.length;l<r;++l){if(m[l]){s.push(m[l])}}}}}};g.Geometry.prototype.direct_subtract=function(i){var j=this.tree,h=i.tree;j.invert();j.clipTo(h);h.clipTo(j);h.invert();h.clipTo(j);h.invert();j.build(h.collectPolygons([]));j.invert();return this};g.Geometry.prototype.direct_union=function(i){var j=this.tree,h=i.tree;j.clipTo(h);h.clipTo(j);h.invert();h.clipTo(j);h.invert();j.build(h.collectPolygons([]));return this};g.Geometry.prototype.direct_intersect=function(i){var j=this.tree,h=i.tree;j.invert();h.clipTo(j);h.invert();j.clipTo(h);h.clipTo(j);j.build(h.collectPolygons([]));j.invert();return this};g.CreateNormal=function(k,o,i){var n,m,l;if(!i||(i<10000)){i=10000}switch(k){case"x":n=new g.Vertex(o,-3*i,i,1,0,0),l=new g.Vertex(o,i,i,1,0,0),m=new g.Vertex(o,i,-3*i,1,0,0);break;case"y":n=new g.Vertex(-3*i,o,i,0,1,0),m=new g.Vertex(i,o,i,0,1,0),l=new g.Vertex(i,o,-3*i,0,1,0);break;case"z":n=new g.Vertex(-3*i,i,o,0,0,1),l=new g.Vertex(i,i,o,0,0,1),m=new g.Vertex(i,-3*i,o,0,0,1);break}var h=new g.Polygon([n,m,l]);h.calculateProperties();var j=new g.Node([h]);return new g.Geometry(j)};g.Geometry.prototype.cut_from_plane=function(i){var j=this.tree,h=i.tree;j.invert();h.clipTo(j);return this};g.Geometry.prototype.toGeometry=function(){var m,l,u=this.matrix?new e.Matrix4().getInverse(this.matrix):null,r=new e.Geometry(),v=this.tree.collectPolygons([]),k=v.length,t,h,w={},s,q,p,n,o;for(m=0;m<k;++m){t=v[m];h=t.vertices.length;for(l=2;l<h;++l){n=t.vertices[0];n=new e.Vector3(n.x,n.y,n.z);if(u){n.applyMatrix4(u)}if(typeof w[n.x+","+n.y+","+n.z]!=="undefined"){s=w[n.x+","+n.y+","+n.z]}else{r.vertices.push(n);s=w[n.x+","+n.y+","+n.z]=r.vertices.length-1}n=t.vertices[l-1];n=new e.Vector3(n.x,n.y,n.z);if(u){n.applyMatrix4(u)}if(typeof w[n.x+","+n.y+","+n.z]!=="undefined"){q=w[n.x+","+n.y+","+n.z]}else{r.vertices.push(n);q=w[n.x+","+n.y+","+n.z]=r.vertices.length-1}n=t.vertices[l];n=new e.Vector3(n.x,n.y,n.z);if(u){n.applyMatrix4(u)}if(typeof w[n.x+","+n.y+","+n.z]!=="undefined"){p=w[n.x+","+n.y+","+n.z]}else{r.vertices.push(n);p=w[n.x+","+n.y+","+n.z]=r.vertices.length-1}o=new e.Face3(s,q,p,new e.Vector3(t.normal.x,t.normal.y,t.normal.z));r.faces.push(o)}}return r};g.Geometry.prototype.scale=function(h,q,p){var j=this.tree.collectPolygons([]);for(var o=0;o<j.length;++o){var n=j[o];for(var m=0;m<n.vertices.length;++m){var l=n.vertices[m];l.x*=h;l.y*=q;l.z*=p}delete n.normal;n.calculateProperties()}};g.Geometry.prototype.toPolygons=function(){var h=this.tree.collectPolygons([]);this.tryToCompress(h);for(var j=0;j<h.length;++j){delete h[j].id;delete h[j].parent}return h};g.Geometry.prototype.toBufferGeometry=function(){return g.CreateBufferGeometry(this.toPolygons())};g.CreateBufferGeometry=function(s){var l,k,h=s.length,t=0;for(l=0;l<h;++l){t+=(s[l].vertices.length-2)*9}var m=new Float32Array(t),n=new Float32Array(t),p=0,r;function q(i){m[p]=i.x;m[p+1]=i.y;m[p+2]=i.z;n[p]=r.nsign*i.nx;n[p+1]=r.nsign*i.ny;n[p+2]=r.nsign*i.nz;p+=3}for(l=0;l<h;++l){r=s[l];for(k=2;k<r.vertices.length;++k){q(r.vertices[0]);q(r.vertices[k-1]);q(r.vertices[k])}}var o=new e.BufferGeometry();o.addAttribute("position",new e.BufferAttribute(m,3));o.addAttribute("normal",new e.BufferAttribute(n,3));return o};g.Geometry.prototype.toMesh=function(h){var i=this.toGeometry(),j=new e.Mesh(i,h);if(this.matrix){j.position.setFromMatrixPosition(this.matrix);j.rotation.setFromRotationMatrix(this.matrix)}return j};g.Polygon=function(i,j,h){if(!(i instanceof Array)){i=[]}this.vertices=i;this.nsign=1;if(i.length>0){this.calculateProperties()}else{this.normal=this.w=undefined}};g.Polygon.prototype.copyProperties=function(i,h){this.normal=i.normal;this.w=i.w;this.nsign=i.nsign;if(h&&(i.id!==undefined)){this.id=i.id;this.parent=i}return this};g.Polygon.prototype.calculateProperties=function(){if(this.normal){return}var i=this.vertices[0],h=this.vertices[1],j=this.vertices[2];this.nsign=1;this.normal=h.clone().subtract(i).cross(j.clone().subtract(i)).normalize();this.w=this.normal.clone().dot(i);return this};g.Polygon.prototype.clone=function(){var h=this.vertices.length,k=new g.Polygon;for(var j=0;j<h;++j){k.vertices.push(this.vertices[j].clone())}return k.copyProperties(this)};g.Polygon.prototype.flip=function(){this.nsign*=-1;this.vertices.reverse();return this};g.Polygon.prototype.classifyVertex=function(h){var i=this.nsign*(this.normal.dot(h)-this.w);if(i<-b){return f}if(i>b){return c}return d};g.Polygon.prototype.classifySide=function(l){var k,m,n=0,j=0,h=l.vertices.length;for(k=0;k<h;++k){m=this.classifyVertex(l.vertices[k]);if(m===c){++n}else{if(m===f){++j}}}if(n>0&&j===0){return c}if(n===0&&j>0){return f}if(n===0&&j===0){return d}return a};g.Polygon.prototype.splitPolygon=function(p,A,n,m,r){var h=this.classifySide(p);if(h===d){((this.nsign*p.nsign*this.normal.dot(p.normal)>0)?A:n).push(p)}else{if(h===c){m.push(p)}else{if(h===f){r.push(p)}else{var E=p.vertices.length,w=this.normal.x,u=this.normal.y,s=this.normal.z,y,x,l,k,D,C,q,o,z=[],B=[];for(y=0;y<E;++y){x=(y+1)%E;D=p.vertices[y];C=p.vertices[x];l=this.classifyVertex(D);k=this.classifyVertex(C);if(l!=f){z.push(D)}if(l!=c){B.push(D)}if((l|k)===a){q=(this.w-(w*D.x+u*D.y+s*D.z))/(w*(C.x-D.x)+u*(C.y-D.y)+s*(C.z-D.z));o=D.interpolate(C,q);z.push(o);B.push(o)}}if(z.length>=3){m.push(new g.Polygon(z).copyProperties(p,true))}if(B.length>=3){r.push(new g.Polygon(B).copyProperties(p,true))}}}}};g.Vertex=function(i,m,k,h,l,j){this.x=i;this.y=m;this.z=k;this.nx=h;this.ny=l;this.nz=j};g.Vertex.prototype.setnormal=function(h,j,i){this.nx=h;this.ny=j;this.nz=i};g.Vertex.prototype.clone=function(){return new g.Vertex(this.x,this.y,this.z,this.nx,this.ny,this.nz)};g.Vertex.prototype.add=function(h){this.x+=h.x;this.y+=h.y;this.z+=h.z;return this};g.Vertex.prototype.subtract=function(h){this.x-=h.x;this.y-=h.y;this.z-=h.z;return this};g.Vertex.prototype.multiplyScalar=function(h){this.x*=h;this.y*=h;this.z*=h;return this};g.Vertex.prototype.cross=function(i){var h=this.x,k=this.y,j=this.z;this.x=k*i.z-j*i.y;this.y=j*i.x-h*i.z;this.z=h*i.y-k*i.x;return this};g.Vertex.prototype.normalize=function(){var h=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);this.x/=h;this.y/=h;this.z/=h;return this};g.Vertex.prototype.dot=function(h){return this.x*h.x+this.y*h.y+this.z*h.z};g.Vertex.prototype.diff=function(l){var k=(this.x-l.x),i=(this.y-l.y),h=(this.z-l.z),j=this.x*this.x+this.y*this.y+this.z*this.z;return(k*k+i*i+h*h)/(j>0?j:1e-10)};g.Vertex.prototype.interpolate=function(h,i){var j=1-i;return new g.Vertex(this.x*j+h.x*i,this.y*j+h.y*i,this.z*j+h.z*i,this.nx*j+h.nx*i,this.ny*j+h.ny*i,this.nz*j+h.nz*i)};g.Vertex.prototype.applyMatrix4=function(i){var h=this.x,l=this.y,k=this.z,j=i.elements;this.x=j[0]*h+j[4]*l+j[8]*k+j[12];this.y=j[1]*h+j[5]*l+j[9]*k+j[13];this.z=j[2]*h+j[6]*l+j[10]*k+j[14];h=this.nx;l=this.ny;k=this.nz;this.nx=j[0]*h+j[4]*l+j[8]*k;this.ny=j[1]*h+j[5]*l+j[9]*k;this.nz=j[2]*h+j[6]*l+j[10]*k;return this};g.Node=function(h,m){this.polygons=[];this.front=this.back=undefined;if(!(h instanceof Array)||h.length===0){return}this.divider=h[0].clone();var n=h.length,l=[],j=[];for(var k=0;k<n;++k){if(m!==undefined){h[k].id=m++;delete h[k].parent}this.divider.splitPolygon(h[k],this.polygons,this.polygons,l,j)}if(m!==undefined){this.maxnodeid=m}if(l.length>0){this.front=new g.Node(l)}if(j.length>0){this.back=new g.Node(j)}};g.Node.isConvex=function(k){var m,l,h=k.length;for(m=0;m<h;++m){for(l=0;l<h;++l){if(m!==l&&k[m].classifySide(k[l])!==f){return false}}}return true};g.Node.prototype.build=function(h){var m=h.length,l=[],j=[];if(!this.divider){this.divider=h[0].clone()}for(var k=0;k<m;++k){this.divider.splitPolygon(h[k],this.polygons,this.polygons,l,j)}if(l.length>0){if(!this.front){this.front=new g.Node()}this.front.build(l)}if(j.length>0){if(!this.back){this.back=new g.Node()}this.back.build(j)}};g.Node.prototype.collectPolygons=function(j){var h=this.polygons.length;for(var k=0;k<h;++k){j.push(this.polygons[k])}if(this.front){this.front.collectPolygons(j)}if(this.back){this.back.collectPolygons(j)}return j};g.Node.prototype.allPolygons=function(){var h=this.polygons.slice();if(this.front){h=h.concat(this.front.allPolygons())}if(this.back){h=h.concat(this.back.allPolygons())}return h};g.Node.prototype.numPolygons=function(){var h=this.polygons.length;if(this.front){h+=this.front.numPolygons()}if(this.back){h+=this.back.numPolygons()}return h};g.Node.prototype.clone=function(){var h=new g.Node();h.divider=this.divider.clone();h.polygons=this.polygons.map(function(i){return i.clone()});h.front=this.front&&this.front.clone();h.back=this.back&&this.back.clone();return h};g.Node.prototype.invert=function(){var k=this.polygons.length;for(var j=0;j<k;++j){this.polygons[j].flip()}this.divider.flip();if(this.front){this.front.invert()}if(this.back){this.back.invert()}var h=this.front;this.front=this.back;this.back=h;return this};g.Node.prototype.clipPolygons=function(h){if(!this.divider){return h.slice()}var m=h.length,l=[],j=[];for(var k=0;k<m;++k){this.divider.splitPolygon(h[k],l,j,l,j)}if(this.front){l=this.front.clipPolygons(l)}if(this.back){j=this.back.clipPolygons(j)}else{j=[]}return l.concat(j)};g.Node.prototype.clipTo=function(h){this.polygons=h.clipPolygons(this.polygons);if(this.front){this.front.clipTo(h)}if(this.back){this.back.clipTo(h)}};return g}));