JSROOT={};JSROOT.BIT=function(a){return 1<<(a)};importScripts("three.min.js","ThreeCSG.js","JSRootGeoBase.js");var clones=null;onmessage=function(f){if(typeof f.data=="string"){console.log("Worker get message "+f.data);return}if(typeof f.data!="object"){return}f.data.tm1=new Date().getTime();if(f.data.init){var b=f.data.clones;if(b){clones=new JSROOT.GEO.ClonedNodes(null,b);delete f.data.clones;clones.sortmap=f.data.sortmap}JSROOT.browser=f.data.browser;f.data.tm2=new Date().getTime();return postMessage(f.data)}if(f.data.shapes){var c=f.data.shapes,h=[];for(var d=0;d<100;++d){var g=clones.BuildShapes(c,f.data.limit,1000);if(g.done){break}postMessage({progress:"Worker creating: "+g.shapes+" / "+c.length+" shapes,  "+g.faces+" faces"})}for(var d=0;d<c.length;++d){var j=c[d];if(j.geom){var a;if(j.geom instanceof THREE.BufferGeometry){a=j.geom}else{var a=new THREE.BufferGeometry();a.fromGeometry(j.geom)}j.buf_pos=a.attributes.position.array;j.buf_norm=a.attributes.normal.array;h.push(j.buf_pos.buffer,j.buf_norm.buffer);delete j.geom}delete j.shape}f.data.tm2=new Date().getTime();return postMessage(f.data,h)}if(f.data.collect!==undefined){clones.MarkVisisble(false,false,f.data.visible);delete f.data.visible;var i=null;if(f.data.matrix){i=new THREE.Matrix4().fromArray(f.data.matrix)}delete f.data.matrix;var g=clones.CollectVisibles(f.data.collect,JSROOT.GEO.CreateFrustum(i),f.data.collect_nodes);f.data.new_nodes=g.lst;f.data.complete=g.complete;f.data.tm2=new Date().getTime();return postMessage(f.data)}};